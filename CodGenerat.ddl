-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-12-12 16:29:35 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE angajati (
    id_angajat                    NUMBER(4) NOT NULL,
    departamente_id_departament   NUMBER(3) NOT NULL,
    cheltuieli_id_suma_cheltuita  NUMBER(5) NOT NULL,
    cnp_angajat                   VARCHAR2(13) NOT NULL,
    nume_angajat                  VARCHAR2(40) NOT NULL,
    departament_angajat           VARCHAR2(30) NOT NULL,
    salariu_angajat               NUMBER(5) NOT NULL,
    data_angajare                 DATE NOT NULL,
    nr_oameni_subordine           NUMBER(2)
);

ALTER TABLE angajati
    ADD CONSTRAINT angajati_cnp_ck CHECK ( REGEXP_LIKE ( cnp,
                                                         '\b[1256]\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])(0[1-9]|[1-4]\d|5[0-2]|99)\d{4}\b' ) );

ALTER TABLE angajati
    ADD CONSTRAINT angajati_nume_ck CHECK ( length(nume_angajat) > 1
                                            AND REGEXP_LIKE ( nume_angajat,
                                                              '[A-Za-z]' ) );

ALTER TABLE angajati ADD CONSTRAINT angajati_pk PRIMARY KEY ( id_angajat,
                                                              cheltuieli_id_suma_cheltuita );

CREATE TABLE angajati_calificari (
    angajati_id_angajat         NUMBER(4) NOT NULL,
    angajati_id_suma_cheltuita  NUMBER(5) NOT NULL,
    calificari_id_calificare    NUMBER(3) NOT NULL
);

ALTER TABLE angajati_calificari
    ADD CONSTRAINT angajati_calificari_pk PRIMARY KEY ( angajati_id_angajat,
                                                        angajati_id_suma_cheltuita,
                                                        calificari_id_calificare );

CREATE TABLE artisti (
    id_artist                     NUMBER(3) NOT NULL,
    cheltuieli_id_suma_cheltuita  NUMBER(5) NOT NULL,
    nume_artist                   NVARCHAR2(30) NOT NULL,
    data_reprezentatie            DATE NOT NULL,
    timp_reprezentatie            NUMBER(3) NOT NULL,
    suma_incasata_artist          NUMBER(5) NOT NULL,
    tara                          VARCHAR2(20)
);

ALTER TABLE artisti
    ADD CONSTRAINT artisti_nume_artist_ck CHECK ( length(nume_artist) > 1 );

ALTER TABLE artisti
    ADD CONSTRAINT artisti_timp_reprezentatie_ck CHECK ( timp_reprezentatie BETWEEN 30 AND 120 );

ALTER TABLE artisti
    ADD CONSTRAINT artisti_suma_incasata_ck CHECK ( suma_incasata_artist BETWEEN 2000 AND 30000 );

ALTER TABLE artisti ADD constraint artisti_tara_ck CHECK (
regexp_like(nume_angajat, '[A-Za-z]');

ALTER TABLE artisti ADD CONSTRAINT artisti_pk PRIMARY KEY ( id_artist );

CREATE TABLE bilete (
    id_bilet                     NUMBER(10) NOT NULL,
    participanti_id_participant  NUMBER(5) NOT NULL,
    tip_bilet                    VARCHAR2(20) NOT NULL,
    suma_bilet                   NUMBER(3) NOT NULL
);

ALTER TABLE bilete
    ADD CONSTRAINT bilete_tip_bilet_ck CHECK ( tip_bilet IN ( 'full_access', 'weekend1', 'weekend2' ) );

ALTER TABLE bilete
    ADD CONSTRAINT bilete_suma_bilet_ck CHECK ( suma_bilet IN ( 250, 300, 550 ) );

CREATE UNIQUE INDEX bilete__idx ON
    bilete (
        participanti_id_participant
    ASC );

ALTER TABLE bilete ADD CONSTRAINT bilete_pk PRIMARY KEY ( id_bilet );

CREATE TABLE buget (
    suma_bani NUMBER(7) NOT NULL
);

ALTER TABLE buget ADD CONSTRAINT buget_pk PRIMARY KEY ( suma_bani );

CREATE TABLE calificari (
    id_calificare        NUMBER(3) NOT NULL,
    denumire_calificare  VARCHAR2(20) NOT NULL
);

ALTER TABLE calificari
    ADD CONSTRAINT calificari_denumire_ck CHECK ( length(denumire_calificare) > 1 );

ALTER TABLE calificari ADD CONSTRAINT calificari_pk PRIMARY KEY ( id_calificare );

CREATE TABLE cheltuieli (
    id_suma_cheltuita      NUMBER(5) NOT NULL,
    utilitate_chleltuieli  VARCHAR2(20) NOT NULL,
    suma_investita         NUMBER(7) NOT NULL,
    buget_suma_bani        NUMBER(7) NOT NULL
);

ALTER TABLE cheltuieli ADD CONSTRAINT cheltuieli_pk PRIMARY KEY ( id_suma_cheltuita );

CREATE TABLE colaboratori (
    id_colaborator             NUMBER(3) NOT NULL,
    incasari_id_incasare       NUMBER(5) NOT NULL,
    nume_colaborator           VARCHAR2(30) NOT NULL,
    serviciu                   VARCHAR2(40) NOT NULL,
    suma_chirie                NUMBER(4) NOT NULL,
    data_incepere_colaborare   DATE NOT NULL,
    data_terminare_colaborare  DATE NOT NULL
);

ALTER TABLE colaboratori
    ADD CONSTRAINT colaboratori_nume_ck CHECK ( length(nume_colaborator) > 1 );

ALTER TABLE colaboratori
    ADD CONSTRAINT colaboratori_tip_serviciu_ck CHECK ( serviciu IN ( 'altele', 'bautura', 'entertainment', 'mancare' ) );

ALTER TABLE colaboratori
    ADD CONSTRAINT colaboratori_suma_chirie_ck CHECK ( suma_chirie BETWEEN 400 AND 800 );

ALTER TABLE colaboratori ADD CONSTRAINT colaboratori_pk PRIMARY KEY ( id_colaborator );

CREATE TABLE departamente (
    id_departament    NUMBER(3) NOT NULL,
    nume_departament  VARCHAR2(30) NOT NULL,
    nume_leader       VARCHAR2(20) NOT NULL
);

ALTER TABLE departamente
    ADD CONSTRAINT departamente_nume_ck CHECK ( length(nume_departament) > 1 );

ALTER TABLE departamente
    ADD CONSTRAINT departamente_nume_leader_ck CHECK ( length(nume_leader) > 1
                                                       AND REGEXP_LIKE ( nume_angajat,
                                                                         '[A-Za-z]' ) );

ALTER TABLE departamente ADD CONSTRAINT departamente_pk PRIMARY KEY ( id_departament );

CREATE TABLE detalii_angajati (
    angajati_id_angajat         NUMBER(4) NOT NULL,
    angajati_id_suma_cheltuita  NUMBER(5) NOT NULL,
    serie_act_indentificare     VARCHAR2(20) NOT NULL,
    tip_act                     VARCHAR2(20) NOT NULL,
    adresa_domiciliu            VARCHAR2(50),
    nr_telefon                  NUMBER(13),
    tara                        VARCHAR2(30) NOT NULL,
    numar_act_identificare      NUMBER(6) NOT NULL
);

ALTER TABLE detalii_angajati
    ADD CONSTRAINT detalii_angajati_tip_act_ck CHECK ( tip_act IN ( 'Adeverinta', 'Altele', 'CI', 'Pasaport' ) );

ALTER TABLE detalii_angajati
    ADD CONSTRAINT detalii_nr_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                               '(/^(?:(?:(?:00\\s?|\\+)40\\s?|0)(?:7\\d{2}\\s?\\d{3}\\s?\\d{3}|(21|31)\\d{1}\\s?\\d{3}\\s?\\d{3}|((2|3)[3-7]\\d{1})\\s?\\d$)' ) );

ALTER TABLE detalii_angajati ADD constraint detalii_angajati_tara_ck CHECK (
regexp_like(nume_angajat, '[A-Za-z]');

ALTER TABLE detalii_angajati ADD CONSTRAINT detalii_angajati_pk PRIMARY KEY ( angajati_id_angajat,
                                                                              angajati_id_suma_cheltuita );

ALTER TABLE detalii_angajati ADD CONSTRAINT detalii_serie_act_numar_act_un UNIQUE ( serie_act_indentificare,
                                                                                    numar_act_identificare );

CREATE TABLE incasari (
    id_incasare         NUMBER(5) NOT NULL,
    buget_suma_bani     NUMBER(7) NOT NULL,
    utilitate_incasari  VARCHAR2(20) NOT NULL,
    suma_incasata       NUMBER(7) NOT NULL
);

ALTER TABLE incasari ADD CONSTRAINT incasari_pk PRIMARY KEY ( id_incasare );

CREATE TABLE participanti (
    id_participant        NUMBER(5) NOT NULL,
    incasari_id_incasare  NUMBER(5) NOT NULL,
    nume_participant      VARCHAR2(40) NOT NULL,
    email_participant     VARCHAR2(40) NOT NULL,
    tip_bilet             VARCHAR2(20) NOT NULL,
    varsta                NUMBER(2),
    camping               CHAR(1)
);

ALTER TABLE participanti ADD constraint participanti_nume_ck CHECK ( length(nume_participant) > 1
                                                                     AND
                                                                     regexp_like(nume_angajat, '[A-Za-z]');

ALTER TABLE participanti
    ADD CONSTRAINT participanti_email_ck CHECK ( REGEXP_LIKE ( email,
                                                               '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE participanti
    ADD CONSTRAINT participanti_tip_bilet_ck CHECK ( tip_bilet IN ( 'full_access', 'weekend1', 'weekend2' ) );

ALTER TABLE participanti
    ADD CONSTRAINT participanti_varsta_ck CHECK ( varsta BETWEEN 14 AND 99 );

ALTER TABLE participanti ADD CONSTRAINT participanti_pk PRIMARY KEY ( id_participant );

CREATE TABLE sponsori (
    id_sponsor            NUMBER(3) NOT NULL,
    incasari_id_incasare  NUMBER(5) NOT NULL,
    nume_sponsor          VARCHAR2(30) NOT NULL,
    data_semnare          DATE NOT NULL,
    data_expirare         DATE NOT NULL,
    suma_bani_sponsori    NUMBER(6) NOT NULL,
    tip_promovare         VARCHAR2(30) NOT NULL
);

ALTER TABLE sponsori
    ADD CONSTRAINT sponsori_nume_sponsor_ck CHECK ( length(nume_sponsor) > 1 );

ALTER TABLE sponsori
    ADD CONSTRAINT sponsori_suma_bani_sponsori_ck CHECK ( suma_bani_sponsori BETWEEN 5000 AND 20000 );

ALTER TABLE sponsori
    ADD CONSTRAINT sponsori_tip_promovare_ck CHECK ( tip_promovare IN ( 'Afis', 'Altele', 'Pliante', 'Produse', 'Video' ) );

ALTER TABLE sponsori ADD CONSTRAINT sponsori_pk PRIMARY KEY ( id_sponsor );

ALTER TABLE angajati_calificari
    ADD CONSTRAINT angajati_calificari_a_fk FOREIGN KEY ( angajati_id_angajat,
                                                          angajati_id_suma_cheltuita )
        REFERENCES angajati ( id_angajat,
                              cheltuieli_id_suma_cheltuita );

ALTER TABLE angajati_calificari
    ADD CONSTRAINT angajati_calificari_c_fk FOREIGN KEY ( calificari_id_calificare )
        REFERENCES calificari ( id_calificare );

ALTER TABLE angajati
    ADD CONSTRAINT angajati_cheltuieli_fk FOREIGN KEY ( cheltuieli_id_suma_cheltuita )
        REFERENCES cheltuieli ( id_suma_cheltuita );

ALTER TABLE angajati
    ADD CONSTRAINT angajati_departamente_fk FOREIGN KEY ( departamente_id_departament )
        REFERENCES departamente ( id_departament );

ALTER TABLE artisti
    ADD CONSTRAINT artisti_cheltuieli_fk FOREIGN KEY ( cheltuieli_id_suma_cheltuita )
        REFERENCES cheltuieli ( id_suma_cheltuita );

ALTER TABLE bilete
    ADD CONSTRAINT bilete_participanti_fk FOREIGN KEY ( participanti_id_participant )
        REFERENCES participanti ( id_participant );

ALTER TABLE cheltuieli
    ADD CONSTRAINT cheltuieli_buget_fk FOREIGN KEY ( buget_suma_bani )
        REFERENCES buget ( suma_bani );

ALTER TABLE colaboratori
    ADD CONSTRAINT colaboratori_incasari_fk FOREIGN KEY ( incasari_id_incasare )
        REFERENCES incasari ( id_incasare );

ALTER TABLE detalii_angajati
    ADD CONSTRAINT detalii_angajati_fk FOREIGN KEY ( angajati_id_angajat,
                                                     angajati_id_suma_cheltuita )
        REFERENCES angajati ( id_angajat,
                              cheltuieli_id_suma_cheltuita );

ALTER TABLE incasari
    ADD CONSTRAINT incasari_buget_fk FOREIGN KEY ( buget_suma_bani )
        REFERENCES buget ( suma_bani );

ALTER TABLE participanti
    ADD CONSTRAINT participanti_incasari_fk FOREIGN KEY ( incasari_id_incasare )
        REFERENCES incasari ( id_incasare );

ALTER TABLE sponsori
    ADD CONSTRAINT sponsori_incasari_fk FOREIGN KEY ( incasari_id_incasare )
        REFERENCES incasari ( id_incasare );

CREATE SEQUENCE angajati_id_angajat_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER angajati_id_angajat_trg BEFORE
    INSERT ON angajati
    FOR EACH ROW
    WHEN ( new.id_angajat IS NULL )
BEGIN
    :new.id_angajat := angajati_id_angajat_seq.nextval;
END;
/

CREATE SEQUENCE artisti_id_artist_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER artisti_id_artist_trg BEFORE
    INSERT ON artisti
    FOR EACH ROW
    WHEN ( new.id_artist IS NULL )
BEGIN
    :new.id_artist := artisti_id_artist_seq.nextval;
END;
/

CREATE SEQUENCE bilete_id_bilet_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER bilete_id_bilet_trg BEFORE
    INSERT ON bilete
    FOR EACH ROW
    WHEN ( new.id_bilet IS NULL )
BEGIN
    :new.id_bilet := bilete_id_bilet_seq.nextval;
END;
/

CREATE SEQUENCE calificari_id_calificare_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER calificari_id_calificare_trg BEFORE
    INSERT ON calificari
    FOR EACH ROW
    WHEN ( new.id_calificare IS NULL )
BEGIN
    :new.id_calificare := calificari_id_calificare_seq.nextval;
END;
/

CREATE SEQUENCE cheltuieli_id_suma_cheltuita START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cheltuieli_id_suma_cheltuita BEFORE
    INSERT ON cheltuieli
    FOR EACH ROW
    WHEN ( new.id_suma_cheltuita IS NULL )
BEGIN
    :new.id_suma_cheltuita := cheltuieli_id_suma_cheltuita.nextval;
END;
/

CREATE SEQUENCE colaboratori_id_colaborator START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER colaboratori_id_colaborator BEFORE
    INSERT ON colaboratori
    FOR EACH ROW
    WHEN ( new.id_colaborator IS NULL )
BEGIN
    :new.id_colaborator := colaboratori_id_colaborator.nextval;
END;
/

CREATE SEQUENCE departamente_id_departament START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER departamente_id_departament BEFORE
    INSERT ON departamente
    FOR EACH ROW
    WHEN ( new.id_departament IS NULL )
BEGIN
    :new.id_departament := departamente_id_departament.nextval;
END;
/

CREATE SEQUENCE incasari_id_incasare_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER incasari_id_incasare_trg BEFORE
    INSERT ON incasari
    FOR EACH ROW
    WHEN ( new.id_incasare IS NULL )
BEGIN
    :new.id_incasare := incasari_id_incasare_seq.nextval;
END;
/

CREATE SEQUENCE participanti_id_participant START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER participanti_id_participant BEFORE
    INSERT ON participanti
    FOR EACH ROW
    WHEN ( new.id_participant IS NULL )
BEGIN
    :new.id_participant := participanti_id_participant.nextval;
END;
/

CREATE SEQUENCE sponsori_id_sponsor_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sponsori_id_sponsor_trg BEFORE
    INSERT ON sponsori
    FOR EACH ROW
    WHEN ( new.id_sponsor IS NULL )
BEGIN
    :new.id_sponsor := sponsori_id_sponsor_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             1
-- ALTER TABLE                             50
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          10
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         10
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
